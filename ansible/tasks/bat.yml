---
- name: Bat | Instalar bat (o batcat) en Ubuntu
  ansible.builtin.apt:
    name: bat # El paquete se llama 'bat' en los repositorios
    state: present
    update_cache: yes # Actualizar caché antes de intentar instalar
  when: ansible_distribution == "Ubuntu"
  # 'become: true' heredado del playbook principal
  register: bat_install_result

# La documentación de 'bat' indica que en Debian/Ubuntu,
# el binario podría llamarse 'batcat'.
- name: Bat | Comprobar si existe /usr/bin/batcat
  ansible.builtin.stat:
    path: /usr/bin/batcat
  when: ansible_distribution == "Ubuntu"
  register: batcat_stat
  # No necesita 'become' para stat

- name: Bat | Comprobar si existe /usr/bin/bat o ~/.local/bin/bat
  ansible.builtin.stat:
    path: "{{ item }}"
  loop:
    - /usr/bin/bat
    - "{{ target_fish_user_home }}/.local/bin/bat" # Directorio de binarios del usuario
  when: ansible_distribution == "Ubuntu"
  register: bat_stat_results # Contendrá una lista en bat_stat_results.results
  # No necesita 'become' para stat

- name: Bat | Determinar si el enlace simbólico para 'bat' en ~/.local/bin es necesario
  ansible.builtin.set_fact:
    create_bat_symlink_in_local_bin: >-
      {% set usr_bin_bat_info = bat_stat_results.results | selectattr('item', 'equalto', '/usr/bin/bat') | first | default({}) %}
      {% set local_bin_bat_info = bat_stat_results.results | selectattr('item', 'equalto', target_fish_user_home + '/.local/bin/bat') | first | default({}) %}
      {# Condición: batcat debe existir #}
      {% if batcat_stat.stat.exists %}
        {# Y (el enlace /usr/bin/bat no existe O existe pero no es el correcto) #}
        {% if not (usr_bin_bat_info.stat.exists | default(false) and (usr_bin_bat_info.stat.islnk | default(false)) and (usr_bin_bat_info.stat.lnk_target | default('') == '/usr/bin/batcat')) %}
          {# Y (el enlace ~/.local/bin/bat no existe O existe pero no es el correcto) #}
          {% if not (local_bin_bat_info.stat.exists | default(false) and (local_bin_bat_info.stat.islnk | default(false)) and (local_bin_bat_info.stat.lnk_target | default('') == '/usr/bin/batcat')) %}
            true
          {% else %}
            false
          {% endif %}
        {% else %}
          false {# /usr/bin/bat ya es el enlace correcto, no necesitamos uno en .local/bin si el sistema ya lo provee bien #}
        {% endif %}
      {% else %}
        false {# batcat no existe, no se puede crear el enlace #}
      {% endif %}
  when: ansible_distribution == "Ubuntu"

- name: Bat | Crear directorio ~/.local/bin para el usuario si no existe
  ansible.builtin.file:
    path: "{{ target_fish_user_home }}/.local/bin"
    state: directory
    owner: "{{ target_fish_user }}"
    group: "{{ target_fish_user }}"
    mode: '0755'
  when:
    - ansible_distribution == "Ubuntu"
    - create_bat_symlink_in_local_bin | default(false)
  # 'become: true' heredado

- name: Bat | Crear enlace simbólico bat -> batcat en ~/.local/bin
  ansible.builtin.file:
    src: /usr/bin/batcat  # El binario real (debe existir)
    dest: "{{ target_fish_user_home }}/.local/bin/bat" # El enlace que queremos
    owner: "{{ target_fish_user }}"
    group: "{{ target_fish_user }}"
    state: link # Asegura que es un enlace simbólico
    force: yes # Sobrescribir si 'bat' existe y no es el enlace correcto a batcat
  when:
    - ansible_distribution == "Ubuntu"
    - create_bat_symlink_in_local_bin | default(false) # Solo si la lógica anterior determinó que es necesario
  # 'become: true' heredado

- name: Bat | Mostrar estado de la instalación (debug)
  ansible.builtin.debug:
    var: bat_install_result
  when:
    - ansible_distribution == "Ubuntu"
    - bat_install_result is defined
