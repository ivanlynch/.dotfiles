#!/usr/bin/env fish

# Script para configurar directorios seguros de Git para Neovim
# Ejecuta este script si obtienes errores de "dubious ownership" en Neovim

echo "üîß Configurando directorios seguros de Git para Neovim..."

# Configurar directorios seguros globalmente
set -l nvim_lazy_dirs \
    "$HOME/.local/share/nvim/lazy/lazy.nvim" \
    "$HOME/.local/share/nvim/lazy/conform.nvim" \
    "$HOME/.local/share/nvim/lazy/fzf-lua" \
    "$HOME/.local/share/nvim/lazy/nvim-treesitter" \
    "$HOME/.local/share/nvim/lazy/nvim-web-devicons"

# Configurar cada directorio espec√≠fico
for dir in $nvim_lazy_dirs
    if test -d "$dir"
        echo "  ‚úÖ Agregando $dir como directorio seguro"
        git config --global --add safe.directory "$dir"
    else
        echo "  ‚ö†Ô∏è  Directorio no encontrado: $dir"
    end
end

# Configurar patrones generales
echo "  üåü Agregando patrones generales..."
git config --global --add safe.directory "$HOME/.local/share/nvim/lazy/*"
git config --global --add safe.directory "$HOME/workspace"
git config --global --add safe.directory "$HOME/workspace/*"
git config --global --add safe.directory "$HOME/workspaces"
git config --global --add safe.directory "$HOME/workspaces/*"
git config --global --add safe.directory "$HOME/.dotfiles"

# Para casos extremos, agregar comod√≠n universal (√∫salo con precauci√≥n)
git config --global --add safe.directory "*"

echo "üéâ ¬°Configuraci√≥n completada!"
echo "üîÑ Reinicia Neovim para que los cambios tomen efecto."
echo ""
echo "üìã Para verificar la configuraci√≥n actual:"
echo "   git config --global --get-regexp safe.directory"
